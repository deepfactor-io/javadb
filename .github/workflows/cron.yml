---
name: Trivy Java DB for latest version
on:
  schedule:
    - cron: "0 1 */2 * *" # runs on  every 2days at 1am
  workflow_dispatch:
env:
  GH_USER: aqua-bot
  packages: write # for GHCR
  contents: read
jobs:
  build:
    name: Build DB
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with: 
          ref: 3.6-DEEP-10047-a

      - name: Get DB version
        id: get_version
        run: echo "DB_VERSION=$(grep -oP 'SchemaVersion = \K\d+(\.\d+)?' pkg/db/db.go)" >> $GITHUB_OUTPUT

      - name: Build the binary
        run: make build

      - name: Crawl indexes
        run: make db-crawl

      - name: Build database
        run: make db-build

      - name: Compress database
        run: make db-compress

      - name: Move DB
        run: mv cache/db/javadb.tar.gz .

      - name: Login to GitHub Packages Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USER }}
          password: ${{ secrets.JAVADB_GH_REGISTRY_TOKEN }}

      - name: Upload assets to GHCR
        env:
          DB_VERSION: ${{ steps.get_version.outputs.DB_VERSION }}
        run: |
          oras version
          oras push --artifact-type application/vnd.aquasec.trivy.config.v1+json \
          ghcr.io/${{ github.repository }}:${DB_VERSION} \
          javadb.tar.gz:application/vnd.aquasec.trivy.javadb.layer.v1.tar+gzip

      - name: clean javadb
        run: |
          rm -rf cache/db/trivy-java.db cache/db/metadata.json javadb.tar.gz

      - name: Build dependency database
        run: make dep-db-build

      - name: Compress dependency database
        run: make dep-db-compress

      - name: Move Dependency DB
        run: mv cache/dep-db/javadependencydb.tar.gz .

      - name: Upload assets to GHCR
        env:
          DB_VERSION: ${{ steps.get_version.outputs.DB_VERSION }}
        run: |
          oras version
          oras push --artifact-type application/vnd.aquasec.trivy.config.v1+json \
          ghcr.io/deepfactor-io/javadependencydb:${DB_VERSION} \
          javadependencydb.tar.gz:application/vnd.aquasec.trivy.javadb.layer.v1.tar+gzip

